{"version":3,"sources":["../src/reach-dropdown.tsx"],"sourcesContent":["/// <reference types=\"vitest-axe/extend-expect\" />\n/// <reference types=\"vitest-dom/extend-expect\" />\n\nimport * as React from \"react\";\nimport { useId } from \"@reach/auto-id\";\nimport { Popover } from \"@reach/popover\";\nimport {\n\tcreateDescendantContext,\n\tDescendantProvider,\n\tuseDescendant,\n\tuseDescendants,\n\tuseDescendantsInit,\n\tuseDescendantKeyDown,\n} from \"@reach/descendants\";\nimport {\n\tcomposeEventHandlers,\n\tcreateContext,\n\tgetOwnerDocument,\n\tisFunction,\n\tisString,\n\tisRightClick,\n\tuseComposedRefs,\n\tusePrevious,\n\tuseStatefulRefValue,\n\tmakeId,\n} from \"@reach/utils\";\nimport type * as Polymorphic from \"@reach/polymorphic\";\n\nimport type { Descendant } from \"@reach/descendants\";\nimport type { Position } from \"@reach/popover\";\n\n////////////////////////////////////////////////////////////////////////////////\n// Actions\n\nconst CLEAR_SELECTION_INDEX = \"CLEAR_SELECTION_INDEX\";\nconst CLICK_MENU_ITEM = \"CLICK_MENU_ITEM\";\nconst CLOSE_MENU = \"CLOSE_MENU\";\nconst OPEN_MENU_AT_FIRST_ITEM = \"OPEN_MENU_AT_FIRST_ITEM\";\nconst OPEN_MENU_AT_INDEX = \"OPEN_MENU_AT_INDEX\";\nconst OPEN_MENU_CLEARED = \"OPEN_MENU_CLEARED\";\nconst SEARCH_FOR_ITEM = \"SEARCH_FOR_ITEM\";\nconst SELECT_ITEM_AT_INDEX = \"SELECT_ITEM_AT_INDEX\";\nconst SET_BUTTON_ID = \"SET_BUTTON_ID\";\n\nconst DropdownDescendantContext = createDescendantContext<DropdownDescendant>(\n\t\"DropdownDescendantContext\"\n);\nconst [DropdownProvider, useDropdownContext] =\n\tcreateContext<InternalDropdownContextValue>(\"Dropdown\");\n\nconst initialState: DropdownState = {\n\t// The button ID is needed for aria controls and can be set directly and\n\t// updated for top-level use via context. Otherwise a default is set by useId.\n\t// TODO: Consider deprecating direct ID in 1.0 in favor of id at the top level\n\t//       for passing deterministic IDs to descendent components.\n\ttriggerId: null,\n\n\t// Whether or not the dropdown is expanded\n\tisExpanded: false,\n\n\t// When a user begins typing a character string, the selection will change if\n\t// a matching item is found\n\ttypeaheadQuery: \"\",\n\n\t// The index of the current selected item. When the selection is cleared a\n\t// value of -1 is used.\n\tselectionIndex: -1,\n};\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Dropdown!\n\nconst DropdownProvider_: React.FC<DropdownProviderProps> = ({\n\tid,\n\tchildren,\n}) => {\n\tlet triggerRef = React.useRef(null);\n\tlet dropdownRef = React.useRef(null);\n\tlet popoverRef = React.useRef(null);\n\tlet [descendants, setDescendants] = useDescendantsInit<DropdownDescendant>();\n\tlet _id = useId(id);\n\tlet dropdownId = id || makeId(\"menu\", _id);\n\tlet triggerId = makeId(\"menu-button\", dropdownId);\n\tlet [state, dispatch] = React.useReducer(reducer, {\n\t\t...initialState,\n\t\ttriggerId,\n\t});\n\n\t// We use an event listener attached to the window to capture outside clicks\n\t// that close the dropdown. We don't want the initial button click to trigger\n\t// this when a dropdown is closed, so we can track this behavior in a ref for\n\t// now. We shouldn't need this when we rewrite with state machine logic.\n\tlet triggerClickedRef = React.useRef(false);\n\n\t// We will put children callbacks in a ref to avoid triggering endless render\n\t// loops when using render props if the app code doesn't useCallback\n\t// https://github.com/reach/reach-ui/issues/523\n\tlet selectCallbacks = React.useRef([]);\n\n\t// If the popover's position overlaps with an option when the popover\n\t// initially opens, the mouseup event will trigger a select. To prevent that,\n\t// we decide the control is only ready to make a selection if the pointer\n\t// moves a certain distance OR if the mouse button is pressed for a certain\n\t// length of time, otherwise the user is just registering the initial button\n\t// click rather than selecting an item.\n\t// For context on some implementation details, see https://github.com/reach/reach-ui/issues/563\n\tlet readyToSelect = React.useRef(false);\n\tlet mouseDownStartPosRef = React.useRef({ x: 0, y: 0 });\n\n\t// When the dropdown is open, focus is placed on the dropdown itself so that\n\t// keyboard navigation is still possible.\n\tReact.useEffect(() => {\n\t\tif (state.isExpanded) {\n\t\t\t// @ts-ignore\n\t\t\twindow.__REACH_DISABLE_TOOLTIPS = true;\n\t\t\twindow.requestAnimationFrame(() => {\n\t\t\t\tfocus(dropdownRef.current);\n\t\t\t});\n\t\t} else {\n\t\t\t// We want to ignore the immediate focus of a tooltip so it doesn't pop up\n\t\t\t// again when the dropdown closes, only pops up when focus returns again\n\t\t\t// to the tooltip (like native OS tooltips).\n\t\t\t// @ts-ignore\n\t\t\twindow.__REACH_DISABLE_TOOLTIPS = false;\n\t\t}\n\t}, [state.isExpanded]);\n\n\treturn (\n\t\t<DescendantProvider\n\t\t\tcontext={DropdownDescendantContext}\n\t\t\titems={descendants}\n\t\t\tset={setDescendants}\n\t\t>\n\t\t\t<DropdownProvider\n\t\t\t\tdispatch={dispatch}\n\t\t\t\tdropdownId={dropdownId}\n\t\t\t\tdropdownRef={dropdownRef}\n\t\t\t\tmouseDownStartPosRef={mouseDownStartPosRef}\n\t\t\t\tpopoverRef={popoverRef}\n\t\t\t\treadyToSelect={readyToSelect}\n\t\t\t\tselectCallbacks={selectCallbacks}\n\t\t\t\tstate={state}\n\t\t\t\ttriggerClickedRef={triggerClickedRef}\n\t\t\t\ttriggerRef={triggerRef}\n\t\t\t>\n\t\t\t\t{isFunction(children)\n\t\t\t\t\t? children({\n\t\t\t\t\t\t\tisExpanded: state.isExpanded,\n\t\t\t\t\t\t\t// TODO: Remove in 1.0\n\t\t\t\t\t\t\tisOpen: state.isExpanded,\n\t\t\t\t\t  })\n\t\t\t\t\t: children}\n\t\t\t</DropdownProvider>\n\t\t</DescendantProvider>\n\t);\n};\n\ninterface DropdownProviderProps {\n\tchildren:\n\t\t| React.ReactNode\n\t\t| ((\n\t\t\t\tprops: DropdownContextValue & {\n\t\t\t\t\t// TODO: Remove in 1.0\n\t\t\t\t\tisOpen: boolean;\n\t\t\t\t}\n\t\t  ) => React.ReactNode);\n\tid?: string;\n}\n\nDropdownProvider_.displayName = \"DropdownProvider\";\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction useDropdownTrigger({\n\tonKeyDown,\n\tonMouseDown,\n\tid,\n\tref: forwardedRef,\n\t...props\n}: DropdownTriggerProps &\n\tReact.ComponentPropsWithoutRef<\"button\"> & {\n\t\tref: React.ForwardedRef<HTMLButtonElement>;\n\t}) {\n\tlet {\n\t\tdispatch,\n\t\tdropdownId,\n\t\tmouseDownStartPosRef,\n\t\ttriggerClickedRef,\n\t\ttriggerRef,\n\t\tstate: { triggerId, isExpanded },\n\t} = useDropdownContext(\"useDropdownTrigger\");\n\tlet ref = useComposedRefs(triggerRef, forwardedRef);\n\tlet items = useDropdownDescendants();\n\tlet firstNonDisabledIndex = React.useMemo(\n\t\t() => items.findIndex((item) => !item.disabled),\n\t\t[items]\n\t);\n\tReact.useEffect(() => {\n\t\tif (id != null && id !== triggerId) {\n\t\t\tdispatch({\n\t\t\t\ttype: SET_BUTTON_ID,\n\t\t\t\tpayload: id,\n\t\t\t});\n\t\t}\n\t}, [triggerId, dispatch, id]);\n\tReact.useEffect(() => {\n\t\tif (id == null) {\n\t\t\tdispatch({\n\t\t\t\ttype: SET_BUTTON_ID,\n\t\t\t\tpayload: makeId(\"menu-button\", dropdownId),\n\t\t\t});\n\t\t}\n\t}, [dropdownId, dispatch, id]);\n\n\tfunction handleKeyDown(event: React.KeyboardEvent) {\n\t\tswitch (event.key) {\n\t\t\tcase \"ArrowDown\":\n\t\t\tcase \"ArrowUp\":\n\t\t\t\tevent.preventDefault(); // prevent scroll\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: OPEN_MENU_AT_INDEX,\n\t\t\t\t\tpayload: { index: firstNonDisabledIndex },\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"Enter\":\n\t\t\tcase \" \":\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: OPEN_MENU_AT_INDEX,\n\t\t\t\t\tpayload: { index: firstNonDisabledIndex },\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction handleMouseDown(event: React.MouseEvent) {\n\t\tif (isRightClick(event.nativeEvent)) {\n\t\t\treturn;\n\t\t}\n\n\t\tmouseDownStartPosRef.current = {\n\t\t\tx: event.clientX,\n\t\t\ty: event.clientY,\n\t\t};\n\n\t\tif (!isExpanded) {\n\t\t\ttriggerClickedRef.current = true;\n\t\t}\n\t\tif (isExpanded) {\n\t\t\tdispatch({ type: CLOSE_MENU });\n\t\t} else {\n\t\t\tdispatch({ type: OPEN_MENU_CLEARED });\n\t\t}\n\t}\n\n\treturn {\n\t\tdata: {\n\t\t\tisExpanded,\n\t\t\tcontrols: dropdownId,\n\t\t},\n\t\tprops: {\n\t\t\t...props,\n\t\t\tref,\n\t\t\tid: triggerId || undefined,\n\t\t\tonKeyDown: composeEventHandlers(onKeyDown, handleKeyDown),\n\t\t\tonMouseDown: composeEventHandlers(onMouseDown, handleMouseDown),\n\t\t\ttype: \"button\" as const,\n\t\t},\n\t};\n}\n\nconst DropdownTrigger = React.forwardRef(\n\t({ as: Comp = \"button\", ...rest }, forwardedRef) => {\n\t\tlet { props } = useDropdownTrigger({ ...rest, ref: forwardedRef });\n\t\treturn <Comp data-reach-dropdown-trigger=\"\" {...props} />;\n\t}\n) as Polymorphic.ForwardRefComponent<\"button\", DropdownTriggerProps>;\n\ninterface DropdownTriggerProps {\n\tchildren: React.ReactNode;\n}\n\nDropdownTrigger.displayName = \"DropdownTrigger\";\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction useDropdownItem({\n\tindex: indexProp,\n\tisLink = false,\n\tonClick,\n\tonDragStart,\n\tonMouseDown,\n\tonMouseEnter,\n\tonMouseLeave,\n\tonMouseMove,\n\tonMouseUp,\n\tonSelect,\n\tdisabled,\n\tonFocus,\n\tvalueText: valueTextProp,\n\tref: forwardedRef,\n\t...props\n}: DropdownItemProps &\n\tReact.ComponentPropsWithoutRef<\"div\"> & {\n\t\tref: React.ForwardedRef<HTMLDivElement>;\n\t}) {\n\tlet {\n\t\tdispatch,\n\t\tdropdownRef,\n\t\tmouseDownStartPosRef,\n\t\treadyToSelect,\n\t\tselectCallbacks,\n\t\ttriggerRef,\n\t\tstate: { selectionIndex, isExpanded },\n\t} = useDropdownContext(\"useDropdownItem\");\n\tlet ownRef = React.useRef<HTMLElement | null>(null);\n\t// After the ref is mounted to the DOM node, we check to see if we have an\n\t// explicit valueText prop before looking for the node's textContent for\n\t// typeahead functionality.\n\tlet [valueText, setValueText] = React.useState(valueTextProp || \"\");\n\n\tlet setValueTextFromDOM = React.useCallback(\n\t\t(node: HTMLElement) => {\n\t\t\tif (!valueTextProp && node?.textContent) {\n\t\t\t\tsetValueText(node.textContent);\n\t\t\t}\n\t\t},\n\t\t[valueTextProp]\n\t);\n\n\tlet mouseEventStarted = React.useRef(false);\n\n\tlet [element, handleRefSet] = useStatefulRefValue<HTMLElement | null>(\n\t\townRef,\n\t\tnull\n\t);\n\tlet descendant = React.useMemo(() => {\n\t\treturn {\n\t\t\telement,\n\t\t\tkey: valueText,\n\t\t\tdisabled,\n\t\t\tisLink,\n\t\t};\n\t}, [disabled, element, isLink, valueText]);\n\tlet index = useDescendant(descendant, DropdownDescendantContext, indexProp);\n\tlet isSelected = index === selectionIndex && !disabled;\n\n\tlet ref = useComposedRefs(forwardedRef, handleRefSet, setValueTextFromDOM);\n\n\t// Update the callback ref array on every render\n\tselectCallbacks.current[index] = onSelect;\n\n\tfunction select() {\n\t\tfocus(triggerRef.current);\n\t\tonSelect && onSelect();\n\t\tdispatch({ type: CLICK_MENU_ITEM });\n\t}\n\n\tfunction handleClick(event: React.MouseEvent) {\n\t\tif (isRightClick(event.nativeEvent)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isLink) {\n\t\t\tif (disabled) {\n\t\t\t\tevent.preventDefault();\n\t\t\t} else {\n\t\t\t\tselect();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleDragStart(event: React.MouseEvent) {\n\t\t// Because we don't preventDefault on mousedown for links (we need the\n\t\t// native click event), clicking and holding on a link triggers a\n\t\t// dragstart which we don't want.\n\t\tif (isLink) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tfunction handleMouseDown(event: React.MouseEvent) {\n\t\tif (isRightClick(event.nativeEvent)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isLink) {\n\t\t\t// Signal that the mouse is down so we can call the right function if the\n\t\t\t// user is clicking on a link.\n\t\t\tmouseEventStarted.current = true;\n\t\t} else {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tfunction handleMouseEnter(event: React.MouseEvent) {\n\t\tlet doc = getOwnerDocument(dropdownRef.current)!;\n\t\tif (!isSelected && index != null && !disabled) {\n\t\t\tif (\n\t\t\t\tdropdownRef?.current &&\n\t\t\t\tdropdownRef.current !== doc.activeElement &&\n\t\t\t\townRef.current !== doc.activeElement\n\t\t\t) {\n\t\t\t\tdropdownRef.current.focus();\n\t\t\t}\n\n\t\t\tdispatch({\n\t\t\t\ttype: SELECT_ITEM_AT_INDEX,\n\t\t\t\tpayload: {\n\t\t\t\t\tindex,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction handleMouseLeave(event: React.MouseEvent) {\n\t\t// Clear out selection when mouse over a non-dropdown-item child.\n\t\tdispatch({ type: CLEAR_SELECTION_INDEX });\n\t}\n\n\tfunction handleMouseMove(event: React.MouseEvent) {\n\t\tif (!readyToSelect.current) {\n\t\t\tlet threshold = 8;\n\t\t\tlet deltaX = Math.abs(event.clientX - mouseDownStartPosRef.current.x);\n\t\t\tlet deltaY = Math.abs(event.clientY - mouseDownStartPosRef.current.y);\n\t\t\tif (deltaX > threshold || deltaY > threshold) {\n\t\t\t\treadyToSelect.current = true;\n\t\t\t}\n\t\t}\n\t\tif (!isSelected && index != null && !disabled) {\n\t\t\tdispatch({\n\t\t\t\ttype: SELECT_ITEM_AT_INDEX,\n\t\t\t\tpayload: {\n\t\t\t\t\tindex,\n\t\t\t\t\tdropdownRef,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction handleFocus() {\n\t\treadyToSelect.current = true;\n\t\tif (!isSelected && index != null && !disabled) {\n\t\t\tdispatch({\n\t\t\t\ttype: SELECT_ITEM_AT_INDEX,\n\t\t\t\tpayload: {\n\t\t\t\t\tindex,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction handleMouseUp(event: React.MouseEvent) {\n\t\tif (isRightClick(event.nativeEvent)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!readyToSelect.current) {\n\t\t\treadyToSelect.current = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (isLink) {\n\t\t\t// If a mousedown event was initiated on a link item followed by a mouseup\n\t\t\t// event on the same link, we do nothing; a click event will come next and\n\t\t\t// handle selection. Otherwise, we trigger a click event.\n\t\t\tif (mouseEventStarted.current) {\n\t\t\t\tmouseEventStarted.current = false;\n\t\t\t} else if (ownRef.current) {\n\t\t\t\townRef.current.click();\n\t\t\t}\n\t\t} else {\n\t\t\tif (!disabled) {\n\t\t\t\tselect();\n\t\t\t}\n\t\t}\n\t}\n\n\tReact.useEffect(() => {\n\t\tif (isExpanded) {\n\t\t\t// When the dropdown opens, wait for about half a second before enabling\n\t\t\t// selection. This is designed to mirror dropdown menus on macOS, where\n\t\t\t// opening a menu on top of a trigger would otherwise result in an\n\t\t\t// immediate accidental selection once the click trigger is released.\n\t\t\tlet id = window.setTimeout(() => {\n\t\t\t\treadyToSelect.current = true;\n\t\t\t}, 400);\n\t\t\treturn () => {\n\t\t\t\twindow.clearTimeout(id);\n\t\t\t};\n\t\t} else {\n\t\t\t// When the dropdown closes, reset readyToSelect for the next interaction.\n\t\t\treadyToSelect.current = false;\n\t\t}\n\t}, [isExpanded, readyToSelect]);\n\n\t// Any time a mouseup event occurs anywhere in the document, we reset the\n\t// mouseEventStarted ref so we can check it again when needed.\n\tReact.useEffect(() => {\n\t\tlet ownerDocument = getOwnerDocument(ownRef.current)!;\n\t\townerDocument.addEventListener(\"mouseup\", listener);\n\t\treturn () => {\n\t\t\townerDocument.removeEventListener(\"mouseup\", listener);\n\t\t};\n\n\t\tfunction listener() {\n\t\t\tmouseEventStarted.current = false;\n\t\t}\n\t}, []);\n\n\treturn {\n\t\tdata: {\n\t\t\tdisabled,\n\t\t},\n\t\tprops: {\n\t\t\tid: useItemId(index),\n\t\t\ttabIndex: -1,\n\t\t\t...props,\n\t\t\tref,\n\t\t\t\"data-disabled\": disabled ? \"\" : undefined,\n\t\t\t\"data-selected\": isSelected ? \"\" : undefined,\n\t\t\t\"data-valuetext\": valueText,\n\t\t\tonClick: composeEventHandlers(onClick, handleClick),\n\t\t\tonDragStart: composeEventHandlers(onDragStart, handleDragStart),\n\t\t\tonMouseDown: composeEventHandlers(onMouseDown, handleMouseDown),\n\t\t\tonMouseEnter: composeEventHandlers(onMouseEnter, handleMouseEnter),\n\t\t\tonMouseLeave: composeEventHandlers(onMouseLeave, handleMouseLeave),\n\t\t\tonMouseMove: composeEventHandlers(onMouseMove, handleMouseMove),\n\t\t\tonFocus: composeEventHandlers(onFocus, handleFocus),\n\t\t\tonMouseUp: composeEventHandlers(onMouseUp, handleMouseUp),\n\t\t},\n\t};\n}\n\n/**\n * DropdownItem\n */\nconst DropdownItem = React.forwardRef(\n\t({ as: Comp = \"div\", ...rest }, forwardedRef) => {\n\t\tlet { props } = useDropdownItem({ ...rest, ref: forwardedRef });\n\t\treturn <Comp data-reach-dropdown-item=\"\" {...props} />;\n\t}\n) as Polymorphic.ForwardRefComponent<\"div\", DropdownItemProps>;\n\ninterface DropdownItemProps {\n\tchildren: React.ReactNode;\n\tonSelect(): void;\n\tindex?: number;\n\tisLink?: boolean;\n\tvalueText?: string;\n\tdisabled?: boolean;\n}\n\nDropdownItem.displayName = \"DropdownItem\";\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction useDropdownItems({\n\tid,\n\tonKeyDown,\n\tref: forwardedRef,\n\t...props\n}: DropdownItemsProps &\n\tReact.ComponentPropsWithoutRef<\"div\"> & {\n\t\tref: React.ForwardedRef<HTMLDivElement>;\n\t}) {\n\tlet {\n\t\tdispatch,\n\t\ttriggerRef,\n\t\tdropdownRef,\n\t\tselectCallbacks,\n\t\tdropdownId,\n\t\tstate: { isExpanded, triggerId, selectionIndex, typeaheadQuery },\n\t} = useDropdownContext(\"useDropdownItems\");\n\n\tlet items = useDropdownDescendants();\n\tlet ref = useComposedRefs(dropdownRef, forwardedRef);\n\n\tReact.useEffect(() => {\n\t\t// Respond to user char key input with typeahead\n\t\tlet match = findItemFromTypeahead(items, typeaheadQuery);\n\t\tif (typeaheadQuery && match != null) {\n\t\t\tdispatch({\n\t\t\t\ttype: SELECT_ITEM_AT_INDEX,\n\t\t\t\tpayload: {\n\t\t\t\t\tindex: match,\n\t\t\t\t\tdropdownRef,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tlet timeout = window.setTimeout(\n\t\t\t() => typeaheadQuery && dispatch({ type: SEARCH_FOR_ITEM, payload: \"\" }),\n\t\t\t1000\n\t\t);\n\t\treturn () => window.clearTimeout(timeout);\n\t}, [dispatch, items, typeaheadQuery, dropdownRef]);\n\n\tlet prevItemsLength = usePrevious(items.length);\n\tlet prevSelected = usePrevious(items[selectionIndex]);\n\tlet prevSelectionIndex = usePrevious(selectionIndex);\n\n\tReact.useEffect(() => {\n\t\tif (selectionIndex > items.length - 1) {\n\t\t\t// If for some reason our selection index is larger than our possible\n\t\t\t// index range (let's say the last item is selected and the list\n\t\t\t// dynamically updates), we need to select the last item in the list.\n\t\t\tdispatch({\n\t\t\t\ttype: SELECT_ITEM_AT_INDEX,\n\t\t\t\tpayload: {\n\t\t\t\t\tindex: items.length - 1,\n\t\t\t\t\tdropdownRef,\n\t\t\t\t},\n\t\t\t});\n\t\t} else if (\n\t\t\t// Checks if\n\t\t\t//  - item length has changed\n\t\t\t//  - selection index has not changed BUT selected item has changed\n\t\t\t//\n\t\t\t// This prevents any dynamic adding/removing of items from actually\n\t\t\t// changing a user's expected selection.\n\t\t\tprevItemsLength !== items.length &&\n\t\t\tselectionIndex > -1 &&\n\t\t\tprevSelected &&\n\t\t\tprevSelectionIndex === selectionIndex &&\n\t\t\titems[selectionIndex] !== prevSelected\n\t\t) {\n\t\t\tdispatch({\n\t\t\t\ttype: SELECT_ITEM_AT_INDEX,\n\t\t\t\tpayload: {\n\t\t\t\t\tindex: items.findIndex((i) => i.key === prevSelected?.key),\n\t\t\t\t\tdropdownRef,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}, [\n\t\tdropdownRef,\n\t\tdispatch,\n\t\titems,\n\t\tprevItemsLength,\n\t\tprevSelected,\n\t\tprevSelectionIndex,\n\t\tselectionIndex,\n\t]);\n\n\tlet handleKeyDown = composeEventHandlers(\n\t\tfunction handleKeyDown(event: React.KeyboardEvent) {\n\t\t\tlet { key } = event;\n\n\t\t\tif (!isExpanded) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tswitch (key) {\n\t\t\t\tcase \"Enter\":\n\t\t\t\tcase \" \":\n\t\t\t\t\tlet selected = items.find((item) => item.index === selectionIndex);\n\t\t\t\t\t// For links, the Enter key will trigger a click by default, but for\n\t\t\t\t\t// consistent behavior across items we'll trigger a click when the\n\t\t\t\t\t// spacebar is pressed.\n\t\t\t\t\tif (selected && !selected.disabled) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tif (selected.isLink && selected.element) {\n\t\t\t\t\t\t\tselected.element.click();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Focus the button first by default when an item is selected.\n\t\t\t\t\t\t\t// We fire the onSelect callback next so the app can manage\n\t\t\t\t\t\t\t// focus if needed.\n\t\t\t\t\t\t\tfocus(triggerRef.current);\n\t\t\t\t\t\t\tselectCallbacks.current[selected.index] &&\n\t\t\t\t\t\t\t\tselectCallbacks.current[selected.index]();\n\t\t\t\t\t\t\tdispatch({ type: CLICK_MENU_ITEM });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Escape\":\n\t\t\t\t\tfocus(triggerRef.current);\n\t\t\t\t\tdispatch({ type: CLOSE_MENU });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Tab\":\n\t\t\t\t\t// prevent leaving\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// Check if a user is typing some char keys and respond by setting\n\t\t\t\t\t// the query state.\n\t\t\t\t\tif (isString(key) && key.length === 1) {\n\t\t\t\t\t\tlet query = typeaheadQuery + key.toLowerCase();\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: SEARCH_FOR_ITEM,\n\t\t\t\t\t\t\tpayload: query,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\tuseDescendantKeyDown(DropdownDescendantContext, {\n\t\t\tcurrentIndex: selectionIndex,\n\t\t\torientation: \"vertical\",\n\t\t\trotate: false,\n\t\t\tfilter: (item) => !item.disabled,\n\t\t\tcallback: (index: number) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: SELECT_ITEM_AT_INDEX,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\tdropdownRef,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\t\t\tkey: \"index\",\n\t\t})\n\t);\n\n\treturn {\n\t\tdata: {\n\t\t\tactiveDescendant: useItemId(selectionIndex) || undefined,\n\t\t\ttriggerId,\n\t\t},\n\t\tprops: {\n\t\t\ttabIndex: -1,\n\t\t\t...props,\n\t\t\tref,\n\t\t\tid: dropdownId,\n\t\t\tonKeyDown: composeEventHandlers(onKeyDown, handleKeyDown),\n\t\t},\n\t};\n}\n\n/**\n * DropdownItem\n */\nconst DropdownItems = React.forwardRef(\n\t({ as: Comp = \"div\", ...rest }, forwardedRef) => {\n\t\tlet { props } = useDropdownItems({ ...rest, ref: forwardedRef });\n\t\treturn <Comp data-reach-dropdown-items=\"\" {...props} />;\n\t}\n) as Polymorphic.ForwardRefComponent<\"div\", DropdownItemsProps>;\n\ninterface DropdownItemsProps {\n\tchildren: React.ReactNode;\n}\n\nDropdownItems.displayName = \"DropdownItems\";\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction useDropdownPopover({\n\tonBlur,\n\tportal = true,\n\tposition,\n\tref: forwardedRef,\n\t...props\n}: DropdownPopoverProps &\n\tReact.ComponentPropsWithoutRef<\"div\"> & {\n\t\tref: React.ForwardedRef<HTMLDivElement>;\n\t}) {\n\tlet {\n\t\ttriggerRef,\n\t\ttriggerClickedRef,\n\t\tdispatch,\n\t\tdropdownRef,\n\t\tpopoverRef,\n\t\tstate: { isExpanded },\n\t} = useDropdownContext(\"useDropdownPopover\");\n\n\tlet ref = useComposedRefs(popoverRef, forwardedRef);\n\n\tReact.useEffect(() => {\n\t\tif (!isExpanded) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet ownerDocument = getOwnerDocument(popoverRef.current)!;\n\t\tfunction listener(event: MouseEvent | TouchEvent) {\n\t\t\tif (triggerClickedRef.current) {\n\t\t\t\ttriggerClickedRef.current = false;\n\t\t\t} else if (\n\t\t\t\t!popoverContainsEventTarget(popoverRef.current, event.target)\n\t\t\t) {\n\t\t\t\t// We on want to close only if focus rests outside the dropdown\n\t\t\t\tdispatch({ type: CLOSE_MENU });\n\t\t\t}\n\t\t}\n\t\townerDocument.addEventListener(\"mousedown\", listener);\n\t\t// see https://github.com/reach/reach-ui/pull/700#discussion_r530369265\n\t\t// ownerDocument.addEventListener(\"touchstart\", listener);\n\t\treturn () => {\n\t\t\townerDocument.removeEventListener(\"mousedown\", listener);\n\t\t\t// ownerDocument.removeEventListener(\"touchstart\", listener);\n\t\t};\n\t}, [\n\t\ttriggerClickedRef,\n\t\ttriggerRef,\n\t\tdispatch,\n\t\tdropdownRef,\n\t\tpopoverRef,\n\t\tisExpanded,\n\t]);\n\n\treturn {\n\t\tdata: {\n\t\t\tportal,\n\t\t\tposition,\n\t\t\ttargetRef: triggerRef,\n\t\t\tisExpanded,\n\t\t},\n\t\tprops: {\n\t\t\tref,\n\t\t\thidden: !isExpanded,\n\t\t\tonBlur: composeEventHandlers(onBlur, (event) => {\n\t\t\t\tif (event.currentTarget.contains(event.relatedTarget as Node)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdispatch({ type: CLOSE_MENU });\n\t\t\t}),\n\t\t\t...props,\n\t\t},\n\t};\n}\n\nconst DropdownPopover = React.forwardRef(\n\t({ as: Comp = \"div\", ...rest }, forwardedRef) => {\n\t\tlet {\n\t\t\tdata: { portal, targetRef, position },\n\t\t\tprops,\n\t\t} = useDropdownPopover({ ...rest, ref: forwardedRef });\n\t\tlet sharedProps = {\n\t\t\t\"data-reach-dropdown-popover\": \"\",\n\t\t};\n\t\treturn portal ? (\n\t\t\t<Popover\n\t\t\t\t{...props}\n\t\t\t\t{...sharedProps}\n\t\t\t\tas={Comp}\n\t\t\t\ttargetRef={targetRef as any}\n\t\t\t\tposition={position}\n\t\t\t\tunstable_skipInitialPortalRender\n\t\t\t/>\n\t\t) : (\n\t\t\t<Comp {...props} {...sharedProps} />\n\t\t);\n\t}\n) as Polymorphic.ForwardRefComponent<\"div\", DropdownPopoverProps>;\n\ninterface DropdownPopoverProps {\n\tchildren: React.ReactNode;\n\tportal?: boolean;\n\tposition?: Position;\n}\n\nDropdownPopover.displayName = \"DropdownPopover\";\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * When a user's typed input matches the string displayed in an item, it is\n * expected that the matching item is selected. This is our matching function.\n */\nfunction findItemFromTypeahead(\n\titems: DropdownDescendant[],\n\tstring: string = \"\"\n) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tlet found = items.find((item) => {\n\t\treturn item.disabled\n\t\t\t? false\n\t\t\t: item.element?.dataset?.valuetext?.toLowerCase().startsWith(string);\n\t});\n\treturn found ? items.indexOf(found) : null;\n}\n\nfunction useItemId(index: number | null) {\n\tlet { dropdownId } = useDropdownContext(\"useItemId\");\n\treturn index != null && index > -1\n\t\t? makeId(`option-${index}`, dropdownId)\n\t\t: undefined;\n}\n\ninterface DropdownState {\n\tisExpanded: boolean;\n\tselectionIndex: number;\n\ttriggerId: null | string;\n\ttypeaheadQuery: string;\n}\n\ntype DropdownAction =\n\t| { type: \"CLICK_MENU_ITEM\" }\n\t| { type: \"CLOSE_MENU\" }\n\t| { type: \"OPEN_MENU_AT_FIRST_ITEM\" }\n\t| { type: \"OPEN_MENU_AT_INDEX\"; payload: { index: number } }\n\t| { type: \"OPEN_MENU_CLEARED\" }\n\t| {\n\t\t\ttype: \"SELECT_ITEM_AT_INDEX\";\n\t\t\tpayload: {\n\t\t\t\tdropdownRef?: React.RefObject<HTMLElement | null>;\n\t\t\t\tindex: number;\n\t\t\t\tmax?: number;\n\t\t\t\tmin?: number;\n\t\t\t};\n\t  }\n\t| { type: \"CLEAR_SELECTION_INDEX\" }\n\t| { type: \"SET_BUTTON_ID\"; payload: string }\n\t| { type: \"SEARCH_FOR_ITEM\"; payload: string };\n\nfunction focus<T extends HTMLElement = HTMLElement>(\n\telement: T | undefined | null\n) {\n\telement && element.focus();\n}\n\nfunction popoverContainsEventTarget(\n\tpopover: HTMLElement | null,\n\ttarget: HTMLElement | EventTarget | null\n) {\n\treturn !!(popover && popover.contains(target as HTMLElement));\n}\n\nfunction reducer(\n\tstate: DropdownState,\n\taction: DropdownAction = {} as DropdownAction\n): DropdownState {\n\tswitch (action.type) {\n\t\tcase CLICK_MENU_ITEM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisExpanded: false,\n\t\t\t\tselectionIndex: -1,\n\t\t\t};\n\t\tcase CLOSE_MENU:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisExpanded: false,\n\t\t\t\tselectionIndex: -1,\n\t\t\t};\n\t\tcase OPEN_MENU_AT_FIRST_ITEM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisExpanded: true,\n\t\t\t\tselectionIndex: 0,\n\t\t\t};\n\t\tcase OPEN_MENU_AT_INDEX:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisExpanded: true,\n\t\t\t\tselectionIndex: action.payload.index,\n\t\t\t};\n\t\tcase OPEN_MENU_CLEARED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisExpanded: true,\n\t\t\t\tselectionIndex: -1,\n\t\t\t};\n\t\tcase SELECT_ITEM_AT_INDEX: {\n\t\t\tlet { dropdownRef = { current: null } } = action.payload;\n\t\t\tif (\n\t\t\t\taction.payload.index >= 0 &&\n\t\t\t\taction.payload.index !== state.selectionIndex\n\t\t\t) {\n\t\t\t\tif (dropdownRef.current) {\n\t\t\t\t\tlet doc = getOwnerDocument(dropdownRef.current);\n\t\t\t\t\tif (dropdownRef.current !== doc?.activeElement) {\n\t\t\t\t\t\tdropdownRef.current.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tselectionIndex:\n\t\t\t\t\t\taction.payload.max != null\n\t\t\t\t\t\t\t? Math.min(Math.max(action.payload.index, 0), action.payload.max)\n\t\t\t\t\t\t\t: Math.max(action.payload.index, 0),\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn state;\n\t\t}\n\t\tcase CLEAR_SELECTION_INDEX:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectionIndex: -1,\n\t\t\t};\n\t\tcase SET_BUTTON_ID:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttriggerId: action.payload,\n\t\t\t};\n\t\tcase SEARCH_FOR_ITEM:\n\t\t\tif (typeof action.payload !== \"undefined\") {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\ttypeaheadQuery: action.payload,\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn state;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nfunction useDropdownDescendants() {\n\treturn useDescendants(DropdownDescendantContext);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Types\n\ntype DropdownDescendant = Descendant<HTMLElement> & {\n\tkey: string;\n\tisLink: boolean;\n\tdisabled?: boolean;\n};\n\ntype TriggerRef = React.RefObject<null | HTMLElement>;\ntype DropdownRef = React.RefObject<null | HTMLElement>;\ntype PopoverRef = React.RefObject<null | HTMLElement>;\n\ninterface InternalDropdownContextValue {\n\tdispatch: React.Dispatch<DropdownAction>;\n\tdropdownId: string | undefined;\n\tdropdownRef: DropdownRef;\n\tmouseDownStartPosRef: React.MutableRefObject<{ x: number; y: number }>;\n\tpopoverRef: PopoverRef;\n\treadyToSelect: React.MutableRefObject<boolean>;\n\tselectCallbacks: React.MutableRefObject<(() => void)[]>;\n\tstate: DropdownState;\n\ttriggerClickedRef: React.MutableRefObject<boolean>;\n\ttriggerRef: TriggerRef;\n}\n\ninterface DropdownContextValue {\n\tisExpanded: boolean;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Exports\n\nexport type {\n\tDropdownTriggerProps,\n\tDropdownItemProps,\n\tDropdownItemsProps,\n\tDropdownPopoverProps,\n\tDropdownProviderProps,\n};\nexport {\n\tDropdownProvider_ as DropdownProvider,\n\tDropdownTrigger,\n\tDropdownItem,\n\tDropdownItems,\n\tDropdownPopover,\n\tuseDropdownTrigger,\n\tuseDropdownItem,\n\tuseDropdownItems,\n\tuseDropdownPopover,\n\tuseDropdownContext,\n\tuseDropdownDescendants,\n};\n"],"mappings":"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","names":[]}