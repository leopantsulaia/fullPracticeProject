{"version":3,"sources":["../src/reach-menu-button.tsx"],"sourcesContent":["/**\n * Welcome to @reach/menu-button!\n *\n * An accessible dropdown menu for the common dropdown menu button design\n * pattern.\n *\n * @see Docs     https://reach.tech/menu-button\n * @see Source   https://github.com/reach/reach-ui/tree/main/packages/menu-button\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\n *\n * TODO: Fix flash when opening a menu button on a screen with another open menu\n */\n\nimport * as React from \"react\";\nimport { Popover } from \"@reach/popover\";\nimport {\n\tDropdownProvider,\n\tuseDropdownItem,\n\tuseDropdownItems,\n\tuseDropdownPopover,\n\tuseDropdownTrigger,\n\tuseDropdownContext,\n} from \"@reach/dropdown\";\nimport { noop } from \"@reach/utils\";\nimport type * as Polymorphic from \"@reach/polymorphic\";\nimport { isFragment } from \"react-is\";\n\nimport type { Position } from \"@reach/popover\";\n\ndeclare const __DEV__: boolean;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Menu\n *\n * The wrapper component for the other components. No DOM element is rendered.\n *\n * @see Docs https://reach.tech/menu-button#menu\n */\nconst Menu = React.forwardRef(\n\t({ as: Comp = React.Fragment, id, children, ...rest }, forwardedRef) => {\n\t\tlet parentIsFragment = React.useMemo(() => {\n\t\t\ttry {\n\t\t\t\t// To test if the component renders a fragment we need to actually\n\t\t\t\t// render it, but this may throw an error since we can't predict what is\n\t\t\t\t// actually provided. There's technically a small chance that this could\n\t\t\t\t// get it wrong but I don't think it's too likely in practice.\n\t\t\t\treturn isFragment(<Comp />);\n\t\t\t} catch (err) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}, [Comp]);\n\t\tlet props = parentIsFragment\n\t\t\t? {}\n\t\t\t: {\n\t\t\t\t\tref: forwardedRef,\n\t\t\t\t\tid,\n\t\t\t\t\t\"data-reach-menu\": \"\",\n\t\t\t\t\t...rest,\n\t\t\t  };\n\t\treturn (\n\t\t\t<Comp {...props}>\n\t\t\t\t<DropdownProvider id={id} children={children} />\n\t\t\t</Comp>\n\t\t);\n\t}\n) as Polymorphic.ForwardRefComponent<any, MenuProps>;\n\n/**\n * @see Docs https://reach.tech/menu-button#menu-props\n */\ninterface MenuProps {\n\t/**\n\t * Requires two children: a `<MenuButton>` and a `<MenuList>`.\n\t *\n\t * @see Docs https://reach.tech/menu-button#menu-children\n\t */\n\tchildren:\n\t\t| React.ReactNode\n\t\t| ((\n\t\t\t\tprops: MenuContextValue & {\n\t\t\t\t\t// TODO: Remove in 1.0\n\t\t\t\t\tisOpen: boolean;\n\t\t\t\t}\n\t\t  ) => React.ReactNode);\n\tid?: string;\n}\n\nMenu.displayName = \"Menu\";\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuButton\n *\n * Wraps a DOM `button` that toggles the opening and closing of the dropdown\n * menu. Must be rendered inside of a `<Menu>`.\n *\n * @see Docs https://reach.tech/menu-button#menubutton\n */\nconst MenuButton = React.forwardRef(\n\t({ as: Comp = \"button\", ...rest }, forwardedRef) => {\n\t\tlet {\n\t\t\tdata: { isExpanded, controls },\n\t\t\tprops,\n\t\t} = useDropdownTrigger({ ...rest, ref: forwardedRef });\n\n\t\treturn (\n\t\t\t<Comp\n\t\t\t\t// When the menu is displayed, the element with role `button` has\n\t\t\t\t// `aria-expanded` set to `true`. When the menu is hidden, it is\n\t\t\t\t// recommended that `aria-expanded` is not present.\n\t\t\t\t// https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\n\t\t\t\taria-expanded={isExpanded ? true : undefined}\n\t\t\t\t// The element with role `button` has `aria-haspopup` set to either\n\t\t\t\t// `\"menu\"` or `true`.\n\t\t\t\t// https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\n\t\t\t\taria-haspopup\n\t\t\t\t// Optionally, the element with role `button` has a value specified for\n\t\t\t\t// `aria-controls` that refers to the element with role `menu`.\n\t\t\t\t// https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\n\t\t\t\taria-controls={controls}\n\t\t\t\t{...props}\n\t\t\t\tdata-reach-menu-button=\"\"\n\t\t\t/>\n\t\t);\n\t}\n) as Polymorphic.ForwardRefComponent<\"button\", MenuButtonProps>;\n\n/**\n * @see Docs https://reach.tech/menu-button#menubutton-props\n */\ninterface MenuButtonProps {\n\t/**\n\t * Accepts any renderable content.\n\t *\n\t * @see Docs https://reach.tech/menu-button#menubutton-children\n\t */\n\tchildren: React.ReactNode;\n}\n\nMenuButton.displayName = \"MenuButton\";\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuItemImpl\n *\n * MenuItem and MenuLink share most of the same functionality captured here.\n */\nconst MenuItemImpl = React.forwardRef(\n\t({ as: Comp = \"div\", ...rest }, forwardedRef) => {\n\t\tlet {\n\t\t\tdata: { disabled },\n\t\t\tprops,\n\t\t} = useDropdownItem({ ...rest, ref: forwardedRef });\n\n\t\treturn (\n\t\t\t<Comp\n\t\t\t\trole=\"menuitem\"\n\t\t\t\t{...props}\n\t\t\t\taria-disabled={disabled || undefined}\n\t\t\t\tdata-reach-menu-item=\"\"\n\t\t\t/>\n\t\t);\n\t}\n) as Polymorphic.ForwardRefComponent<\"div\", MenuItemImplProps>;\n\nMenuItemImpl.displayName = \"MenuItemImpl\";\n\ninterface MenuItemImplProps {\n\t/**\n\t * You can put any type of content inside of a `<MenuItem>`.\n\t *\n\t * @see Docs https://reach.tech/menu-button#menuitem-children\n\t */\n\tchildren: React.ReactNode;\n\t/**\n\t * Callback that fires when a `MenuItem` is selected.\n\t *\n\t * @see Docs https://reach.tech/menu-button#menuitem-onselect\n\t */\n\tonSelect(): void;\n\tindex?: number;\n\tisLink?: boolean;\n\tvalueText?: string;\n\t/**\n\t * Whether or not the item is disabled from selection and navigation.\n\t *\n\t * @see Docs https://reach.tech/menu-button#menuitem-disabled\n\t */\n\tdisabled?: boolean;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuItem\n *\n * Handles menu selection. Must be a direct child of a `<MenuList>`.\n *\n * @see Docs https://reach.tech/menu-button#menuitem\n */\nconst MenuItem = React.forwardRef(({ as = \"div\", ...props }, forwardedRef) => {\n\treturn <MenuItemImpl {...props} ref={forwardedRef} as={as} />;\n}) as Polymorphic.ForwardRefComponent<\"div\", MenuItemProps>;\n\n/**\n * @see Docs https://reach.tech/menu-button#menuitem-props\n */\ntype MenuItemProps = Omit<MenuItemImplProps, \"isLink\">;\n\nMenuItem.displayName = \"MenuItem\";\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuItems\n *\n * A low-level wrapper for menu items. Compose it with `MenuPopover` for more\n * control over the nested components and their rendered DOM nodes, or if you\n * need to nest arbitrary components between the outer wrapper and your list.\n *\n * @see Docs https://reach.tech/menu-button#menuitems\n */\nconst MenuItems = React.forwardRef(\n\t({ as: Comp = \"div\", ...rest }, forwardedRef) => {\n\t\tlet {\n\t\t\tdata: { activeDescendant, triggerId },\n\t\t\tprops,\n\t\t} = useDropdownItems({ ...rest, ref: forwardedRef });\n\n\t\treturn (\n\t\t\t// TODO: Should probably file a but in jsx-a11y, but this is correct\n\t\t\t// according to https://www.w3.org/TR/wai-aria-practices-1.2/examples/menu-button/menu-button-actions-active-descendant.html\n\t\t\t// eslint-disable-next-line jsx-a11y/aria-activedescendant-has-tabindex\n\t\t\t<Comp\n\t\t\t\t// Refers to the descendant menuitem element that is visually indicated\n\t\t\t\t// as focused.\n\t\t\t\t// https://www.w3.org/TR/wai-aria-practices-1.2/examples/menu-button/menu-button-actions-active-descendant.html\n\t\t\t\taria-activedescendant={activeDescendant}\n\t\t\t\t// Refers to the element that contains the accessible name for the\n\t\t\t\t// `menu`. The menu is labeled by the menu button.\n\t\t\t\t// https://www.w3.org/TR/wai-aria-practices-1.2/examples/menu-button/menu-button-actions-active-descendant.html\n\t\t\t\taria-labelledby={triggerId || undefined}\n\t\t\t\t// The element that contains the menu items displayed by activating the\n\t\t\t\t// button has role menu.\n\t\t\t\t// https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\n\t\t\t\trole=\"menu\"\n\t\t\t\t{...props}\n\t\t\t\tdata-reach-menu-items=\"\"\n\t\t\t/>\n\t\t);\n\t}\n) as Polymorphic.ForwardRefComponent<\"div\", MenuItemsProps>;\n\n/**\n * @see Docs https://reach.tech/menu-button#menuitems-props\n */\ninterface MenuItemsProps {\n\t/**\n\t * Can contain only `MenuItem` or a `MenuLink`.\n\t *\n\t * @see Docs https://reach.tech/menu-button#menuitems-children\n\t */\n\tchildren: React.ReactNode;\n}\n\nMenuItems.displayName = \"MenuItems\";\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuLink\n *\n * Handles linking to a different page in the menu. By default it renders `<a>`,\n * but also accepts any other kind of Link as long as the `Link` uses the\n * `React.forwardRef` API.\n *\n * Must be a direct child of a `<MenuList>`.\n *\n * @see Docs https://reach.tech/menu-button#menulink\n */\nconst MenuLink = React.forwardRef(\n\t(\n\t\t{\n\t\t\tas = \"a\",\n\t\t\t// @ts-ignore\n\t\t\tcomponent,\n\t\t\tonSelect,\n\t\t\t...props\n\t\t},\n\t\tforwardedRef\n\t) => {\n\t\tif (__DEV__) {\n\t\t\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\t\t\tReact.useEffect(() => {\n\t\t\t\tif (component) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\"[@reach/menu-button]: Please use the `as` prop instead of `component`\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}, [component]);\n\t\t}\n\n\t\treturn (\n\t\t\t<MenuItemImpl\n\t\t\t\t{...props}\n\t\t\t\tref={forwardedRef}\n\t\t\t\tdata-reach-menu-link=\"\"\n\t\t\t\tas={as}\n\t\t\t\tisLink={true}\n\t\t\t\tonSelect={onSelect || noop}\n\t\t\t/>\n\t\t);\n\t}\n) as Polymorphic.ForwardRefComponent<\"a\", MenuLinkProps>;\n\n/**\n * @see Docs https://reach.tech/menu-button#menulink-props\n */\ntype MenuLinkProps = Omit<MenuItemImplProps, \"isLink\" | \"onSelect\"> & {\n\tonSelect?(): void;\n};\n\nMenuLink.displayName = \"MenuLink\";\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuList\n *\n * Wraps a DOM element that renders the menu items. Must be rendered inside of\n * a `<Menu>`.\n *\n * @see Docs https://reach.tech/menu-button#menulist\n */\nconst MenuList = React.forwardRef(\n\t({ portal = true, ...props }, forwardedRef) => {\n\t\treturn (\n\t\t\t<MenuPopover portal={portal}>\n\t\t\t\t<MenuItems {...props} ref={forwardedRef} data-reach-menu-list=\"\" />\n\t\t\t</MenuPopover>\n\t\t);\n\t}\n) as Polymorphic.ForwardRefComponent<\"div\", MenuListProps>;\n\n/**\n * @see Docs https://reach.tech/menu-button#menulist-props\n */\ninterface MenuListProps {\n\t/**\n\t * Whether or not the popover should be rendered inside a portal. Defaults to\n\t * `true`.\n\t *\n\t * @see Docs https://reach.tech/menu-button#menulist-portal\n\t */\n\tportal?: boolean;\n\t/**\n\t * Can contain only `MenuItem` or a `MenuLink`.\n\t *\n\t * @see Docs https://reach.tech/menu-button#menulist-children\n\t */\n\tchildren: React.ReactNode;\n}\n\nMenuList.displayName = \"MenuList\";\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuPopover\n *\n * A low-level wrapper for the popover that appears when a menu button is open.\n * You can compose it with `MenuItems` for more control over the nested\n * components and their rendered DOM nodes, or if you need to nest arbitrary\n * components between the outer wrapper and your list.\n *\n * @see Docs https://reach.tech/menu-button#menupopover\n */\nconst MenuPopover = React.forwardRef(\n\t({ as: Comp = \"div\", ...rest }, forwardedRef) => {\n\t\tlet {\n\t\t\tdata: { portal, targetRef, position },\n\t\t\tprops,\n\t\t} = useDropdownPopover({ ...rest, ref: forwardedRef });\n\n\t\tlet sharedProps = {\n\t\t\t\"data-reach-menu-popover\": \"\",\n\t\t};\n\n\t\treturn portal ? (\n\t\t\t<Popover\n\t\t\t\t{...props}\n\t\t\t\t{...sharedProps}\n\t\t\t\tas={Comp}\n\t\t\t\ttargetRef={targetRef as any}\n\t\t\t\tposition={position}\n\t\t\t\tunstable_skipInitialPortalRender\n\t\t\t/>\n\t\t) : (\n\t\t\t<Comp {...props} {...sharedProps} />\n\t\t);\n\t}\n) as Polymorphic.ForwardRefComponent<\"div\", MenuPopoverProps>;\n\n/**\n * @see Docs https://reach.tech/menu-button#menupopover-props\n */\ninterface MenuPopoverProps {\n\t/**\n\t * Must contain a `MenuItems`\n\t *\n\t * @see Docs https://reach.tech/menu-button#menupopover-children\n\t */\n\tchildren: React.ReactNode;\n\t/**\n\t * Whether or not the popover should be rendered inside a portal. Defaults to\n\t * `true`.\n\t *\n\t * @see Docs https://reach.tech/menu-button#menupopover-portal\n\t */\n\tportal?: boolean;\n\t/**\n\t * A function used to determine the position of the popover in relation to the\n\t * menu button. By default, the menu button will attempt to position the\n\t * popover below the button aligned with its left edge. If this positioning\n\t * results in collisions with any side of the window, the popover will be\n\t * anchored to a different side to avoid those collisions if possible.\n\t *\n\t * @see Docs https://reach.tech/menu-button#menupopover-position\n\t */\n\tposition?: Position;\n}\n\nMenuPopover.displayName = \"MenuPopover\";\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hook that exposes data for a given `Menu` component to its descendants.\n *\n * @see Docs https://reach.tech/menu-button#usemenubuttoncontext\n */\nfunction useMenuButtonContext(): MenuContextValue {\n\tlet {\n\t\tstate: { isExpanded },\n\t} = useDropdownContext(\"useMenuButtonContext\");\n\treturn React.useMemo(() => ({ isExpanded }), [isExpanded]);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Types\n\ninterface MenuContextValue {\n\tisExpanded: boolean;\n\t// id: string | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Exports\n\nexport type {\n\tMenuButtonProps,\n\tMenuContextValue,\n\tMenuItemProps,\n\tMenuItemsProps,\n\tMenuLinkProps,\n\tMenuListProps,\n\tMenuPopoverProps,\n\tMenuProps,\n};\nexport {\n\tMenu,\n\tMenuButton,\n\tMenuItem,\n\tMenuItems,\n\tMenuLink,\n\tMenuList,\n\tMenuPopover,\n\tuseMenuButtonContext,\n};\n"],"mappings":"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","names":[]}